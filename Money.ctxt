#BlueJ class context
comment0.target=Money
comment0.text=\ \n\ A\ blueprint\ for\ Money\ objects...\n\ \n\ @author\ (Haidar\ &&\ Waleed)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=theDollars\ theCents
comment1.target=Money(int,\ int)
comment1.text=\n\ Constructor\:\ initializes\ all\ attributes\ (i.e.\ totalCents)\n\ based\ on\ the\ given\ dollars\ and\ cents.\n\n\ @param\ theDollars\ the\ number\ of\ dollars\n\ @param\ theCents\ \ \ the\ number\ of\ cents\n
comment10.params=other
comment10.target=int\ compareTo(Money)
comment10.text=\n\ compares\ two\ Money\ objects\ with\ one\ parameter.\n
comment2.params=theCents
comment2.target=Money(long)
comment2.text=\n\ Constructor\:\ initializes\ all\ attributes\ (i.e.\ totalCents)\n\ based\ on\ the\ given\ total\ cents.\n\n\ @param\ theCents\ \ the\ total\ number\ of\ cents\n
comment3.params=
comment3.target=int\ getDollars()
comment3.text=\n\ getDollars\:\n\n\ @return\ the\ number\ of\ dollars\n
comment4.params=
comment4.target=int\ getCents()
comment4.text=\n\ getCents\:\n\n\ @return\ the\ number\ of\ cents\ (between\ 0\ and\ 99,\ inclusive)\n
comment5.params=theMoney
comment5.target=Money\ add(Money)
comment5.text=\n\ add\:\ adds\ two\ money\ values\n\ \n\ Precondition\:\ two\ Money\ amounts\ are\ created\ and\ valid\n\ Postcondition\:\ the\ amount\ in\ this\ Money\ object\ is\ added\ to\ the\ Money\ amount\ given\ as\ parameter;\ the\ result\ is\ returned.\n\ Neither\ the\ calling\ object\ nor\ the\ parameter\ are\ changed.\n\ \n\ @param\ a\ Money,\ the\ Money\ amount\ to\ add\ to\ the\ calling\ object\ (this)\n\ @return\ Money,\ the\ sum\n
comment6.params=
comment6.target=long\ getTotalCents()
comment6.text=\n\ get\ total\ cents\n\ @return\ the\ totalCents\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ toString\:\ return\ String\ representation\ of\ this\ Money\ object\n\ Precondition\:\ this\ Money\ object\ is\ valid\n\n\ @return\ a\ String\ representation\ of\ this\ object\n
comment8.params=other
comment8.target=boolean\ equals(Money)
comment8.text=\n\ equals\:\ compare\ the\ status\ of\ two\ money\ objects.\n\ \n\ @param\ other\ \ a\ Money\ object\n\ @return\ true\ if\ calling\ object\ (this)\ is\ in\ the\ same\ state\ as\ the\ Money\ object\ received\ as\ a\ parameter,\ and\ false\ otherwise.\n
comment9.params=theMoney
comment9.target=Money\ sub(Money)
comment9.text=\n\ sub\:\ subtracts\ two\ money\ values\n\ \n\ Precondition\:\ two\ Money\ amounts\ are\ created\ and\ valid\n\ Postcondition\:\ the\ amount\ in\ this\ Money\ object\ is\ subtracted\ to\ the\ Money\ amount\ given\ as\ parameter;\ the\ result\ is\ returned.\n\ Neither\ the\ calling\ object\ nor\ the\ parameter\ are\ changed.\n\ \n\ @param\ a\ Money,\ the\ Money\ amount\ to\ subtract\ from\ the\ calling\ object\ (this)\n\ @return\ Money,\ the\ Sub\n
numComments=11
